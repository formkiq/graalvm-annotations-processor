buildscript {
    repositories {
        maven { url "https://plugins.gradle.org/m2/" }
        jcenter()
    }
    dependencies {
        classpath "com.diffplug.spotless:spotless-plugin-gradle:3.27.1"
    }
}

plugins {
  id "com.github.spotbugs" version "4.5.0"
}

apply plugin: 'java-library'
apply plugin: 'maven-publish'
apply plugin: 'checkstyle'
apply plugin: 'signing'
apply plugin: 'com.diffplug.gradle.spotless'

sourceCompatibility = JavaVersion.VERSION_11
targetCompatibility = JavaVersion.VERSION_11

group 'com.formkiq'
version '1.2.0'

dependencies {
	annotationProcessor group: 'com.google.auto.service', name: 'auto-service', version: '1.0-rc7'
	compileOnly group: 'com.google.auto.service', name: 'auto-service', version: '1.0-rc7'
	compileOnly group: 'com.google.auto.service', name: 'auto-service-annotations', version: '1.0-rc7'

    implementation group: 'com.formkiq', name: 'graalvm-annotations', version: '1.1.0'
	implementation group: 'com.google.code.gson', name: 'gson', version: '2.9.0'
	testImplementation group: 'junit', name: 'junit', version:'4.+'
	testImplementation group: 'com.google.testing.compile', name: 'compile-testing', version: '0.18'
}

compileJava {
    options.annotationProcessorPath = configurations.annotationProcessor
}

spotless {
  java {
    googleJavaFormat()
  }
}

spotbugsMain {
    reports {
        html {
            enabled = true
            destination = file("$buildDir/reports/spotbugs/main/spotbugs.html")
            stylesheet = 'fancy-hist.xsl'
        }
    }
}

checkstyle {
	toolVersion '8.29'
	configFile file("config/checkstyle/checkstyle.xml")
	configProperties = [project_loc: "${projectDir}"]
	}

tasks.withType(Checkstyle).each { checkstyleTask ->
    checkstyleTask.doLast {
        reports.all { report ->
            def outputFile = report.destination
            if (outputFile.exists() && outputFile.text.contains("<error ")) {
                throw new GradleException("There were checkstyle warnings! For more info check $outputFile")
            }
        }
    }
}

repositories {
	mavenLocal()
    mavenCentral()
}

check {
	  dependsOn(tasks.publishToMavenLocal)
}

java {
    withJavadocJar()
    withSourcesJar()
}

javadoc {
    if(JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
}

artifacts {
    archives jar
	
    archives javadocJar
    archives sourcesJar
}

afterEvaluate {
	   tasks.getByName('spotlessCheck').dependsOn(tasks.getByName('spotlessApply'))
}

publishing {
	publications {
	    mavenJava(MavenPublication) {
	        from components.java
	        
	        pom {
                name = 'FormKiQ Lambda Runtime Graalvm Annotations'
                description = 'Lambda Runtime Graalvm Annotations'
                url = 'https://github.com/formkiq/graalvm-annotations-processor'
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id = 'mfriesen'
                        name = 'Mike Friesen'
                        email = 'mike@formkiq.com'
                    }
                }
                scm {
                    connection = 'scm:git:git://github.com/formkiq/graalvm-annotations-processor.git'
                    developerConnection = 'scm:git:ssh://github.com/formkiq/graalvm-annotations-processor.git'
                    url = 'https://github.com/formkiq/graalvm-annotations-processor.git'
                }
            }
	    }
	}
	repositories {
		maven {
		  credentials {
		    username project.repoUser
		    password project.repoPassword
		  }
		  url "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
		}
	}
}

signing {
    sign publishing.publications.mavenJava
}

check {
	dependsOn(tasks.publishToMavenLocal)
}

spotlessJavaCheck.dependsOn spotlessJavaApply
